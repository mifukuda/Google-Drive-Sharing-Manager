AUTH ENDPOINTS
    GET /auth/login (Implemented)
        
    GET /auth/callback (Implemented)
    

SNAPSHOT ENDPOINTS (all endpoints below are prepended with /fileSnapshot/)
    GET /create (Implemented)
        description: create file info snapshot based on current drive state and
        store to database
        input body: None
        response body: {fileSnapshot: <serialized snapshot>}
        success status: 200
        error status: 400
    

    GET /getinfo (Implemented)
        description: get basic high-level info about file info snapshots that
        can be later used to selectively query detailed snapshot info from /get
        input body: None
        response body: { snapshotInfo: [{_id: <string>, createdAt: <string>}, ...]}
        success status: 200
        error status: 400


    GET /get (Implemented)
        description: returns entire file info snapshot from database given the
        snapshot's database ID
        input body: {id: <string>}
        response body: {fileSnapshot: <serialized snapshot>}
        success status: 200
        error status: 400


    GET /update (NOT Implemented)
        input body: {
            snapshot_id: String,
            files: [file_id: id],
            permissions: [],
        },
        response body: {success: true}
        success status: 200


    GET /checkpolicies (NOT Implemented)
        description: returns list of files that violate access control policies
        input_body: {
            snapshot_id: <string>,
            acp_id: <string>    
        }
        response body: [{ file: <file name> }, ...]
        response status: 200

    GET /analyze/deviantSharing (NOT Implemented)

    GET /analyze/sharingDifferences (NOT Implemented)

    POST /query (NOT Implemented)
        description: returns flat list of files that match query for given snapshot
        input_body: { query: <string>, snapshot_id: <string> }
        response body: { query: <string>, query_results: [ <serialized file info snapshot>, ...] }


USER ENDPOINTS

    GET /user/getAccessControlPolicies (NOT Implemented)
        description: returns list of all access control policies for user
        input_body: None
        response body: {[ file: <file name> ], ...}